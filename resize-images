#!/bin/sh

# Variable initialization
SOURCE="$PWD"
TARGET="Publish"

pushd $PWD

pushd () {
    command pushd "$@" > /dev/null
}

popd () {
    command popd "$@" > /dev/null
}

abort() {
    popd
    exit 1
}

printHelp() {
    echo "$(basename $0) - Resize several images in a batch"
    echo ""
    echo "Usage: $(basename $0) [-S SOURCE] [-T TARGET] [-f FILE] [-h]"
    echo ""
    echo " -S SOURCE   Specifies the source folder to read from. Default is the current directory."
    echo " -T TARGET   Specifies the target directory. Default is \"Publish\""
    echo " -f FILE     Specifies a file to process. If not given, <TARGET>.txt (from the target name, see above)"
    echo "             is used if it exists; if this file does not exist, resize.txt is used. If resize.txt file does"
    echo "             not exist either, then all files matching *.JPG or *.jpg are processed."
    echo " -f          Prints this help text and exits."

    popd
    exit $1
}

while getopts f:s:S:T:vh opt
do
    case $opt in
        f)  customFileParam=$OPTARG
            customFile=$(realpath $customFileParam);;
        s) echo "Option -s $OPTARG is not supported yet.";;
        S) SOURCE=$OPTARG;;
        T) TARGET=$OPTARG;;
        v) echo "Option -v";;
        h) printHelp 0;;
        ?) printHelp 1;;
    esac
done

cd "$SOURCE"
if [ $? -ne 0 ]
then
    echo Beende...
    abort
fi

if [ ! -d "$TARGET" ]
then
    mkdir "$TARGET"
    if [ $? -ne 0 ]
    then
	echo Beende...
	abort
    fi
fi

if [ $customFileParam ]
then
    if [ -f $customFile ]
    then
        FILES=$(cat $customFile)
    else
        >&2 echo $customFileParam does not exist or is not a file.
        abort
    fi
elif [ -f $TARGET.txt ]
then
    FILES=$(cat $TARGET.txt)
elif [ -f resize.txt ]
then
    FILES=$(cat resize.txt)
else
    FILES="*.JPG *.jpg"
fi

for i in $FILES
do
    echo Verkleinere $i
    convert $i -resize 2048x1536 $TARGET/$i
done

popd
